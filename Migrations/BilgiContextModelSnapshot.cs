// <auto-generated />
using System;
using BilgiKutuphanesiWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BilgiKutuphanesiWebApp.Migrations
{
    [DbContext(typeof(BilgiContext))]
    partial class BilgiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BilgiKutuphanesiWebApp.Data.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"), 1L, 1);

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookTypeId")
                        .HasColumnType("int");

                    b.Property<int>("LendId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LendTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LibraryId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("BookTypeId");

                    b.HasIndex("LibraryId");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            BookName = "Fizik",
                            BookTypeId = 1,
                            LendId = 4,
                            LendTime = new DateTime(2022, 9, 4, 19, 25, 39, 744, DateTimeKind.Local).AddTicks(128),
                            UserId = 0,
                            time = "2"
                        },
                        new
                        {
                            BookId = 3,
                            BookName = "Suç ve Ceza",
                            BookTypeId = 2,
                            LendId = 4,
                            LendTime = new DateTime(2022, 9, 4, 19, 25, 39, 744, DateTimeKind.Local).AddTicks(139),
                            UserId = 0,
                            time = "3"
                        },
                        new
                        {
                            BookId = 2,
                            BookName = "Tutunamayanlar",
                            BookTypeId = 2,
                            LendId = 6,
                            LendTime = new DateTime(2022, 9, 4, 19, 25, 39, 744, DateTimeKind.Local).AddTicks(141),
                            UserId = 0,
                            time = "2"
                        },
                        new
                        {
                            BookId = 4,
                            BookName = "Matematik",
                            BookTypeId = 1,
                            LendId = 8,
                            LendTime = new DateTime(2022, 9, 4, 19, 25, 39, 744, DateTimeKind.Local).AddTicks(142),
                            UserId = 0,
                            time = "1"
                        });
                });

            modelBuilder.Entity("BilgiKutuphanesiWebApp.Data.Models.BookType", b =>
                {
                    b.Property<int>("BookTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookTypeId"), 1L, 1);

                    b.Property<string>("BookTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookTypeId");

                    b.ToTable("BookType");

                    b.HasData(
                        new
                        {
                            BookTypeId = 1,
                            BookTypeName = "Lesson Book"
                        },
                        new
                        {
                            BookTypeId = 2,
                            BookTypeName = "Novel"
                        });
                });

            modelBuilder.Entity("BilgiKutuphanesiWebApp.Data.Models.Dvds", b =>
                {
                    b.Property<int>("DvdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DvdId"), 1L, 1);

                    b.Property<string>("DvdName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LibraryId")
                        .HasColumnType("int");

                    b.HasKey("DvdId");

                    b.HasIndex("LibraryId");

                    b.ToTable("Dvds");

                    b.HasData(
                        new
                        {
                            DvdId = 1,
                            DvdName = "Bilgi Felsefesi"
                        });
                });

            modelBuilder.Entity("BilgiKutuphanesiWebApp.Data.Models.Library", b =>
                {
                    b.Property<int>("LibraryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LibraryId"), 1L, 1);

                    b.Property<string>("LibraryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LibraryId");

                    b.ToTable("Library");

                    b.HasData(
                        new
                        {
                            LibraryId = 1,
                            LibraryName = "Bilgi Kütüphanesi"
                        });
                });

            modelBuilder.Entity("BilgiKutuphanesiWebApp.Data.Models.Magazines", b =>
                {
                    b.Property<int>("MagazineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MagazineId"), 1L, 1);

                    b.Property<int?>("LibraryId")
                        .HasColumnType("int");

                    b.Property<string>("MagazineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MagazineId");

                    b.HasIndex("LibraryId");

                    b.ToTable("Magazines");

                    b.HasData(
                        new
                        {
                            MagazineId = 1,
                            MagazineName = "John"
                        },
                        new
                        {
                            MagazineId = 2,
                            MagazineName = "Mukesh"
                        });
                });

            modelBuilder.Entity("BilgiKutuphanesiWebApp.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LendId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 4,
                            Job = "Student",
                            LendId = 0,
                            UserName = "Seda"
                        },
                        new
                        {
                            UserId = 8,
                            Job = "Lecturer",
                            LendId = 0,
                            UserName = "Haluk"
                        },
                        new
                        {
                            UserId = 6,
                            Job = "Consultant",
                            LendId = 0,
                            UserName = "Pınar"
                        });
                });

            modelBuilder.Entity("BookUser", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("BookUser");
                });

            modelBuilder.Entity("BilgiKutuphanesiWebApp.Data.Models.Book", b =>
                {
                    b.HasOne("BilgiKutuphanesiWebApp.Data.Models.BookType", "BookType")
                        .WithMany("Book")
                        .HasForeignKey("BookTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilgiKutuphanesiWebApp.Data.Models.Library", null)
                        .WithMany("Books")
                        .HasForeignKey("LibraryId");

                    b.Navigation("BookType");
                });

            modelBuilder.Entity("BilgiKutuphanesiWebApp.Data.Models.Dvds", b =>
                {
                    b.HasOne("BilgiKutuphanesiWebApp.Data.Models.Library", null)
                        .WithMany("Dvds")
                        .HasForeignKey("LibraryId");
                });

            modelBuilder.Entity("BilgiKutuphanesiWebApp.Data.Models.Magazines", b =>
                {
                    b.HasOne("BilgiKutuphanesiWebApp.Data.Models.Library", null)
                        .WithMany("Magazines")
                        .HasForeignKey("LibraryId");
                });

            modelBuilder.Entity("BookUser", b =>
                {
                    b.HasOne("BilgiKutuphanesiWebApp.Data.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilgiKutuphanesiWebApp.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BilgiKutuphanesiWebApp.Data.Models.BookType", b =>
                {
                    b.Navigation("Book");
                });

            modelBuilder.Entity("BilgiKutuphanesiWebApp.Data.Models.Library", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Dvds");

                    b.Navigation("Magazines");
                });
#pragma warning restore 612, 618
        }
    }
}
